import { Component, OnInit, inject, PLATFORM_ID } from '@angular/core';
import { CommonModule, isPlatformBrowser } from '@angular/common';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-cookies-banner',
  standalone: true,
  imports: [CommonModule, FormsModule],
  template: `
    <!-- Cookies Banner -->
    <div
      *ngIf="showBanner && isBrowser"
      class="fixed bottom-0 left-0 right-0 z-50 bg-white border-t border-gray-200 shadow-lg"
      role="dialog"
      aria-labelledby="cookies-title"
      aria-describedby="cookies-description">

      <div class="container mx-auto px-4 py-4">
        <div class="flex flex-col md:flex-row items-start md:items-center justify-between gap-4">

          <!-- Content -->
          <div class="flex-1">
            <h2 id="cookies-title" class="text-lg font-semibold text-gray-900 mb-2">
              üç™ –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º cookies
            </h2>
            <p id="cookies-description" class="text-gray-600 text-sm max-w-2xl">
              –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª—ã cookie –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å–∞–π—Ç–∞, –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–∞—Ñ–∏–∫–∞ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.
              –ü—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∞–π—Ç, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∞—à–µ–π
              <a routerLink="/privacy-policy" class="text-blue-600 hover:text-blue-700 underline">–ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
              –∏ <a routerLink="/cookies-policy" class="text-blue-600 hover:text-blue-700 underline">–ø–æ–ª–∏—Ç–∏–∫–æ–π cookies</a>.
            </p>
          </div>

          <!-- Buttons -->
          <div class="flex flex-col sm:flex-row gap-3">
            <button
              (click)="acceptAllCookies()"
              class="px-6 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
              aria-label="–ü—Ä–∏–Ω—è—Ç—å –≤—Å–µ cookies">
              –ü—Ä–∏–Ω—è—Ç—å –≤—Å–µ
            </button>

            <button
              (click)="acceptEssentialOnly()"
              class="px-6 py-2 bg-gray-200 text-gray-700 text-sm font-medium rounded-lg hover:bg-gray-300 transition-colors focus:ring-2 focus:ring-gray-500 focus:ring-offset-2"
              aria-label="–ü—Ä–∏–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ cookies">
              –¢–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ
            </button>

            <button
              (click)="openSettings()"
              class="px-6 py-2 bg-white border border-gray-300 text-gray-700 text-sm font-medium rounded-lg hover:bg-gray-50 transition-colors focus:ring-2 focus:ring-gray-500 focus:ring-offset-2"
              aria-label="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ cookies">
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </button>
          </div>
        </div>

        <!-- Detailed Settings (expandable) -->
        <div *ngIf="showSettings" class="mt-4 pt-4 border-t border-gray-200">
          <h3 class="text-base font-semibold text-gray-900 mb-3">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ cookies</h3>

          <div class="space-y-4">
            <!-- Essential Cookies -->
            <div class="flex items-start space-x-3">
              <input
                type="checkbox"
                id="essential"
                [checked]="true"
                disabled
                class="mt-1 w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
              <div class="flex-1">
                <label for="essential" class="text-sm font-medium text-gray-900">
                  –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ cookies
                </label>
                <p class="text-sm text-gray-600">
                  –≠—Ç–∏ cookies –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–∞–π—Ç–∞ –∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω—ã.
                </p>
              </div>
            </div>

            <!-- Analytics Cookies -->
            <div class="flex items-start space-x-3">
              <input
                type="checkbox"
                id="analytics"
                [(ngModel)]="analyticsEnabled"
                class="mt-1 w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
              <div class="flex-1">
                <label for="analytics" class="text-sm font-medium text-gray-900">
                  –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ cookies
                </label>
                <p class="text-sm text-gray-600">
                  –ü–æ–º–æ–≥–∞—é—Ç –Ω–∞–º –ø–æ–Ω—è—Ç—å, –∫–∞–∫ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç —Å —Å–∞–π—Ç–æ–º, —Å–æ–±–∏—Ä–∞—è –∞–Ω–æ–Ω–∏–º–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.
                </p>
              </div>
            </div>

            <!-- Marketing Cookies -->
            <div class="flex items-start space-x-3">
              <input
                type="checkbox"
                id="marketing"
                [(ngModel)]="marketingEnabled"
                class="mt-1 w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
              <div class="flex-1">
                <label for="marketing" class="text-sm font-medium text-gray-900">
                  –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ cookies
                </label>
                <p class="text-sm text-gray-600">
                  –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π.
                </p>
              </div>
            </div>
          </div>

          <div class="flex justify-end mt-4">
            <button
              (click)="saveSettings()"
              class="px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors">
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </button>
          </div>
        </div>
      </div>
    </div>
  `,
  styles: [`
    :host {
      display: block;
    }
  `]
})
export class CookiesBannerComponent implements OnInit {
  private platformId = inject(PLATFORM_ID);
  isBrowser = false;

  showBanner = true;
  showSettings = false;

  analyticsEnabled = true;
  marketingEnabled = false;

  ngOnInit(): void {
    this.isBrowser = isPlatformBrowser(this.platformId);

    if (this.isBrowser) {
      this.checkCookieConsent();
    }
  }

  private checkCookieConsent(): void {
    const consent = localStorage.getItem('cookie-consent');
    if (consent) {
      this.showBanner = false;
      const settings = JSON.parse(consent);
      this.analyticsEnabled = settings.analytics;
      this.marketingEnabled = settings.marketing;
    }
  }

  acceptAllCookies(): void {
    this.saveConsent(true, true);
    this.showBanner = false;
    this.initializeTracking();
  }

  acceptEssentialOnly(): void {
    this.saveConsent(false, false);
    this.showBanner = false;
  }

  openSettings(): void {
    this.showSettings = !this.showSettings;
  }

  saveSettings(): void {
    this.saveConsent(this.analyticsEnabled, this.marketingEnabled);
    this.showBanner = false;
    this.showSettings = false;
    this.initializeTracking();
  }

  private saveConsent(analytics: boolean, marketing: boolean): void {
    const consent = {
      essential: true,
      analytics,
      marketing,
      timestamp: new Date().toISOString(),
      version: '1.0'
    };

    localStorage.setItem('cookie-consent', JSON.stringify(consent));
  }

  private initializeTracking(): void {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    // Google Analytics, Yandex Metrika –∏ —Ç.–¥.
    console.log('Tracking initialized with consent');
  }
}
