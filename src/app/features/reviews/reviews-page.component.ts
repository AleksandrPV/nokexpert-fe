import { Component, OnInit, inject } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterLink } from '@angular/router';
import { BreadcrumbsComponent } from '../../shared/components/breadcrumbs/breadcrumbs.component';
import { CustomerReviewsComponent } from '../../shared/components/customer-reviews/customer-reviews.component';
import { SeoService } from '../../shared/services/seo.service';
import { ReviewsService, CustomerReview } from '../../shared/services/reviews.service';
import { OrganizationService } from '../../shared/services/organization.service';

@Component({
  selector: 'app-reviews-page',
  standalone: true,
  imports: [CommonModule, RouterLink, BreadcrumbsComponent, CustomerReviewsComponent],
  template: `
    <div class="min-h-screen bg-gradient-to-br from-brand-sky/5 to-brand-navy/5">
      <!-- Breadcrumbs -->
      <app-breadcrumbs 
        [breadcrumbs]="[
          { label: '–ì–ª–∞–≤–Ω–∞—è', url: '/', active: false },
          { label: '–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤', url: '/reviews', active: true }
        ]">
      </app-breadcrumbs>

      <!-- Hero Section -->
      <section class="relative py-16 sm:py-24">
        <div class="container mx-auto px-4">
          <div class="text-center max-w-4xl mx-auto">
            <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold text-brand-navy mb-6">
              –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
            </h1>
            <p class="text-xl sm:text-2xl text-brand-dark/80 mb-8 leading-relaxed">
              –ë–æ–ª–µ–µ {{ reviewsCount }} –¥–æ–≤–æ–ª—å–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —É–∂–µ –ø—Ä–æ—à–ª–∏ –ù–û–ö —Å –Ω–∞—à–µ–π –ø–æ–º–æ—â—å—é
            </p>
            
            <!-- –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ -->
            <div class="flex items-center justify-center gap-6 mb-8">
              <div class="flex items-center gap-3">
                <div class="flex">
                  <span *ngFor="let star of [1,2,3,4,5]" class="text-3xl">
                    {{ star <= averageRating ? '‚≠ê' : '‚òÜ' }}
                  </span>
                </div>
                <span class="text-2xl font-bold text-brand-dark">{{ averageRating }}/5</span>
              </div>
              <span class="text-brand-dark/60 text-xl">‚Ä¢</span>
              <span class="text-brand-dark/60 text-xl">{{ reviewsCount }} –æ—Ç–∑—ã–≤–æ–≤</span>
            </div>

            <!-- –§–∏–ª—å—Ç—Ä—ã -->
            <div class="flex flex-wrap justify-center gap-4 mb-8">
              <button 
                (click)="filterByService('')"
                [class]="selectedFilter === '' ? 'bg-brand-navy text-white' : 'bg-white/80 text-brand-dark'"
                class="px-6 py-3 rounded-full font-medium transition-all duration-300 hover:shadow-lg">
                –í—Å–µ –æ—Ç–∑—ã–≤—ã
              </button>
              <button 
                (click)="filterByService('–ù–û–ö –ù–û–°–¢–†–û–ô')"
                [class]="selectedFilter === '–ù–û–ö –ù–û–°–¢–†–û–ô' ? 'bg-brand-navy text-white' : 'bg-white/80 text-brand-dark'"
                class="px-6 py-3 rounded-full font-medium transition-all duration-300 hover:shadow-lg">
                –ù–û–ö –ù–û–°–¢–†–û–ô
              </button>
              <button 
                (click)="filterByService('–ù–û–ö –ù–û–ü–†–ò–ó')"
                [class]="selectedFilter === '–ù–û–ö –ù–û–ü–†–ò–ó' ? 'bg-brand-navy text-white' : 'bg-white/80 text-brand-dark'"
                class="px-6 py-3 rounded-full font-medium transition-all duration-300 hover:shadow-lg">
                –ù–û–ö –ù–û–ü–†–ò–ó
              </button>
              <button 
                (click)="filterByService('–ù–û–ö –û–ü–ë')"
                [class]="selectedFilter === '–ù–û–ö –û–ü–ë' ? 'bg-brand-navy text-white' : 'bg-white/80 text-brand-dark'"
                class="px-6 py-3 rounded-full font-medium transition-all duration-300 hover:shadow-lg">
                –ù–û–ö –û–ü–ë
              </button>
            </div>
          </div>
        </div>
      </section>

      <!-- –í—Å–µ –æ—Ç–∑—ã–≤—ã -->
      <section class="py-16">
        <div class="container mx-auto px-4">
          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto">
            <div 
              *ngFor="let review of filteredReviews"
              class="bg-white rounded-xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 border border-brand-sky/20">
              
              <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç–∑—ã–≤–∞ -->
              <div class="flex items-start justify-between mb-6">
                <h3 class="font-semibold text-brand-dark text-xl leading-tight flex-1 mr-4">
                  {{ review.reviewTitle }}
                </h3>
                <div class="flex">
                  <span *ngFor="let star of [1,2,3,4,5]" class="text-xl">
                    {{ star <= review.rating ? '‚≠ê' : '‚òÜ' }}
                  </span>
                </div>
              </div>

              <!-- –¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ -->
              <p class="text-brand-dark/70 mb-6 leading-relaxed text-lg">
                "{{ review.reviewBody }}"
              </p>

              <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ—Ä–µ -->
              <div class="border-t border-brand-sky/20 pt-6">
                <div class="flex items-center gap-4">
                  <div class="w-16 h-16 bg-gradient-to-br from-brand-sky to-brand-navy rounded-full flex items-center justify-center text-white font-bold text-xl">
                    {{ review.author.charAt(0) }}
                  </div>
                  <div class="flex-1">
                    <div class="font-semibold text-brand-dark text-lg">{{ review.author }}</div>
                    <div class="text-brand-dark/60" *ngIf="review.position">
                      {{ review.position }}
                    </div>
                    <div class="text-brand-dark/60" *ngIf="review.company">
                      {{ review.company }}
                    </div>
                  </div>
                </div>
                
                <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                <div class="flex items-center justify-between mt-6 text-sm text-brand-dark/50">
                  <span class="bg-brand-sky/10 text-brand-navy px-3 py-1 rounded-full font-medium">
                    {{ review.serviceType }}
                  </span>
                  <div class="flex items-center gap-4">
                    <span *ngIf="review.verified" class="flex items-center gap-1">
                      <span class="text-green-500">‚úì</span>
                      –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π
                    </span>
                    <span class="flex items-center gap-1">
                      <span>üëç</span>
                      {{ review.helpful }}
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- –ü–∞–≥–∏–Ω–∞—Ü–∏—è -->
          <div class="text-center mt-12" *ngIf="filteredReviews.length > 6">
            <div class="flex justify-center gap-2">
              <button 
                *ngFor="let page of getPages()"
                (click)="goToPage(page)"
                [class]="currentPage === page ? 'bg-brand-navy text-white' : 'bg-white/80 text-brand-dark'"
                class="px-4 py-2 rounded-lg font-medium transition-all duration-300 hover:shadow-lg">
                {{ page }}
              </button>
            </div>
          </div>
        </div>
      </section>

      <!-- CTA Section -->
      <section class="py-16 bg-gradient-to-r from-brand-navy to-brand-sky text-white">
        <div class="container mx-auto px-4 text-center">
          <h2 class="text-3xl font-bold mb-6">
            –ì–æ—Ç–æ–≤—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–∏–º –¥–æ–≤–æ–ª—å–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º?
          </h2>
          <p class="text-xl mb-8 opacity-90">
            –ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –ù–û–ö –∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Å–¥–∞–π—Ç–µ —ç–∫–∑–∞–º–µ–Ω
          </p>
          <div class="flex flex-col sm:flex-row gap-4 justify-center">
            <button 
              (click)="openConsultationPopup()"
              class="glass px-8 py-4 rounded-full font-semibold text-brand-dark hover-lift border-white bg-white/20 backdrop-blur-sm">
              üìû –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è
            </button>
            <a 
              href="tel:{{ organizationService.getPhoneHref() }}"
              class="glass px-8 py-4 rounded-full font-semibold text-white hover-lift border-white/30">
              üì± {{ organizationService.getPhoneDisplay() }}
            </a>
          </div>
        </div>
      </section>
    </div>
  `,
  styles: []
})
export class ReviewsPageComponent implements OnInit {
  reviews: CustomerReview[] = [];
  filteredReviews: CustomerReview[] = [];
  selectedFilter: string = '';
  averageRating: number = 5.0;
  reviewsCount: number = 0;
  currentPage: number = 1;
  itemsPerPage: number = 9;
  
  private reviewsService = inject(ReviewsService);
  private seoService = inject(SeoService);
  public organizationService = inject(OrganizationService);

  ngOnInit(): void {
    this.loadReviews();
    this.loadStats();
    this.seoService.setSeoData({
      title: '–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ - –ù–û–ö –≠–∫—Å–ø–µ—Ä—Ç | –†–µ–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –ù–û–ö',
      description: '–ß–∏—Ç–∞–π—Ç–µ –æ—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –ù–û–ö. –ë–æ–ª–µ–µ 3000+ –¥–æ–≤–æ–ª—å–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —É–∂–µ –ø—Ä–æ—à–ª–∏ –ù–û–ö —Å –Ω–∞—à–µ–π –ø–æ–º–æ—â—å—é. –†–µ–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º 5/5.',
      keywords: '–æ—Ç–∑—ã–≤—ã –ù–û–ö, –æ—Ç–∑—ã–≤—ã –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –ù–û–ö, –æ—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ –ù–û–ö –≠–∫—Å–ø–µ—Ä—Ç, —Ä–µ–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –ù–û–ö',
      canonical: 'https://–Ω–æ–∫-—ç–∫—Å–ø–µ—Ä—Ç.—Ä—Ñ/reviews'
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º Review schema
    this.seoService.addCustomerReviewsStructuredData();
  }

  private loadReviews(): void {
    this.reviewsService.getReviews().subscribe((reviews: CustomerReview[]) => {
      this.reviews = reviews;
      this.filteredReviews = reviews;
    });
  }

  private loadStats(): void {
    this.reviewsService.getAverageRating().subscribe((rating: number) => {
      this.averageRating = rating;
    });

    this.reviewsService.getReviewsCount().subscribe((count: number) => {
      this.reviewsCount = count;
    });
  }

  filterByService(serviceType: string): void {
    this.selectedFilter = serviceType;
    this.currentPage = 1;
    
    if (serviceType === '') {
      this.filteredReviews = this.reviews;
    } else {
      this.filteredReviews = this.reviews.filter(review => 
        review.serviceType === serviceType
      );
    }
  }

  getPages(): number[] {
    const totalPages = Math.ceil(this.filteredReviews.length / this.itemsPerPage);
    const pages: number[] = [];
    
    for (let i = 1; i <= totalPages; i++) {
      pages.push(i);
    }
    
    return pages;
  }

  goToPage(page: number): void {
    this.currentPage = page;
  }

  openConsultationPopup(): void {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—Ç–∫—Ä—ã—Ç–∏—è popup
    console.log('–û—Ç–∫—Ä—ã—Ç—å popup –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏');
  }
} 