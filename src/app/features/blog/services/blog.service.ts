import { Injectable } from '@angular/core';
import { Observable, of } from 'rxjs';
import { delay, map } from 'rxjs/operators';
import { 
  BlogArticle, 
  BlogCategory, 
  BlogTag, 
  BlogAuthor, 
  BlogFilters, 
  SortOption, 
  ArticleStatus,
  PaginationData 
} from '../models/blog.interface';

@Injectable({
  providedIn: 'root'
})
export class BlogService {
  
  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  private mockAuthors: BlogAuthor[] = [
    {
      id: '1',
      name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤',
      avatar: 'üë®‚ÄçüèóÔ∏è',
      bio: '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–º—É –Ω–∞–¥–∑–æ—Ä—É —Å 15-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º',
      role: '–í–µ–¥—É—â–∏–π —ç–∫—Å–ø–µ—Ä—Ç'
    },
    {
      id: '2',
      name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
      avatar: 'üë©‚Äçüíº',
      bio: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
      role: '–Æ—Ä–∏—Å—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç'
    },
    {
      id: '3',
      name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤',
      avatar: 'üë®‚Äçüíª',
      bio: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∫—É—Ä—Å–æ–≤ –ù–û–ö',
      role: '–ú–µ—Ç–æ–¥–∏—Å—Ç'
    }
  ];

  private mockCategories: BlogCategory[] = [
    {
      id: '1',
      name: '–ù–æ–≤–æ—Å—Ç–∏ –ù–û–ö',
      slug: 'news',
      description: '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ñ–µ—Ä–µ –ù–û–ö',
      color: 'bg-brand-coral',
      icon: 'üì¢',
      articleCount: 12
    },
    {
      id: '2',
      name: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω—É',
      slug: 'exam-prep',
      description: '–°–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ',
      color: 'bg-brand-navy',
      icon: 'üìö',
      articleCount: 8
    },
    {
      id: '3',
      name: '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ',
      slug: 'legislation',
      description: '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π –±–∞–∑—ã',
      color: 'bg-brand-sky',
      icon: '‚öñÔ∏è',
      articleCount: 5
    },
    {
      id: '4',
      name: '–ö–µ–π—Å—ã –∏ –ø—Ä–∞–∫—Ç–∏–∫–∞',
      slug: 'cases',
      description: '–†–µ–∞–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏ —Ä–∞–∑–±–æ—Ä—ã —Å–∏—Ç—É–∞—Ü–∏–π',
      color: 'bg-brand-cream',
      icon: 'üíº',
      articleCount: 10
    }
  ];

  private mockTags: BlogTag[] = [
    { id: '1', name: '–ù–û–°–¢–†–û–ô', slug: 'nostroy', color: 'text-brand-navy' },
    { id: '2', name: '–ù–û–ü–†–ò–ó', slug: 'nopriz', color: 'text-brand-sky' },
    { id: '3', name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ', slug: 'construction', color: 'text-brand-coral' },
    { id: '4', name: '–≠–∫–∑–∞–º–µ–Ω', slug: 'exam', color: 'text-brand-dark' },
    { id: '5', name: '–î–æ–∫—É–º–µ–Ω—Ç—ã', slug: 'documents', color: 'text-brand-cream' }
  ];

  private mockArticles: BlogArticle[] = [
    {
      id: '1',
      title: '–ù–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ù–û–ö –ù–û–°–¢–†–û–ô: —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –≤ 2024 –≥–æ–¥—É',
      excerpt: '–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ–¥—É—Ä–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –æ—Ü–µ–Ω–∫–∏ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ù–û–°–¢–†–û–ô, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —Å–∏–ª—É –≤ –Ω–∞—á–∞–ª–µ 2024 –≥–æ–¥–∞.',
      content: '–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏...',
      slug: 'nok-nostroy-changes-2024',
      publishedAt: new Date('2024-01-15'),
      updatedAt: new Date('2024-01-15'),
      author: this.mockAuthors[0],
      category: this.mockCategories[0],
      tags: [this.mockTags[0], this.mockTags[2]],
      featuredImage: 'üèóÔ∏è',
      readTime: 8,
      views: 1250,
      featured: true,
      status: ArticleStatus.PUBLISHED
    },
    {
      id: '2',
      title: '–¢–æ–ø-10 –æ—à–∏–±–æ–∫ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —á–∞—Å—Ç–∏ –ù–û–ö',
      excerpt: '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∞–º—ã–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –ø—Ä–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —á–∞—Å—Ç–∏ —ç–∫–∑–∞–º–µ–Ω–∞ –ù–û–ö –∏ –¥–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Ö –∏–∑–±–µ–∂–∞–Ω–∏—é.',
      content: '–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏...',
      slug: 'top-10-nok-mistakes',
      publishedAt: new Date('2024-01-10'),
      updatedAt: new Date('2024-01-10'),
      author: this.mockAuthors[2],
      category: this.mockCategories[1],
      tags: [this.mockTags[3], this.mockTags[0]],
      featuredImage: 'üìù',
      readTime: 12,
      views: 890,
      featured: true,
      status: ArticleStatus.PUBLISHED
    },
    {
      id: '3',
      title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –¥–ª—è –ù–û–ö –ù–û–ü–†–ò–ó',
      excerpt: '–î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞–∑–±–æ—Ä –Ω–æ–≤—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—é –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤—â–∏–∫–æ–≤ –∏ –∏–∑—ã—Å–∫–∞—Ç–µ–ª–µ–π.',
      content: '–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏...',
      slug: 'nopriz-portfolio-requirements',
      publishedAt: new Date('2024-01-08'),
      updatedAt: new Date('2024-01-08'),
      author: this.mockAuthors[1],
      category: this.mockCategories[2],
      tags: [this.mockTags[1], this.mockTags[4]],
      featuredImage: 'üìê',
      readTime: 15,
      views: 567,
      featured: false,
      status: ArticleStatus.PUBLISHED
    },
    {
      id: '4',
      title: '–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–¥–∞—Ç—å –∞–ø–µ–ª–ª—è—Ü–∏—é –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ù–û–ö',
      excerpt: '–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ø–æ–¥–∞—á–µ –∞–ø–µ–ª–ª—è—Ü–∏–∏ –≤ —Å–ª—É—á–∞–µ –Ω–µ—Å–æ–≥–ª–∞—Å–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –æ—Ü–µ–Ω–∫–∏ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏.',
      content: '–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏...',
      slug: 'nok-appeal-guide',
      publishedAt: new Date('2024-01-05'),
      updatedAt: new Date('2024-01-05'),
      author: this.mockAuthors[1],
      category: this.mockCategories[3],
      tags: [this.mockTags[4], this.mockTags[0]],
      featuredImage: '‚öñÔ∏è',
      readTime: 10,
      views: 432,
      featured: false,
      status: ArticleStatus.PUBLISHED
    },
    {
      id: '5',
      title: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —Å–¥–∞—á–∏ –ù–û–ö –∑–∞ 2023 –≥–æ–¥',
      excerpt: '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –æ—Ü–µ–Ω–∫–∏ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç—Ä–∞—Å–ª–∏ –∑–∞ –ø—Ä–æ—à–µ–¥—à–∏–π –≥–æ–¥.',
      content: '–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏...',
      slug: 'nok-statistics-2023',
      publishedAt: new Date('2024-01-02'),
      updatedAt: new Date('2024-01-02'),
      author: this.mockAuthors[0],
      category: this.mockCategories[0],
      tags: [this.mockTags[0], this.mockTags[1]],
      featuredImage: 'üìä',
      readTime: 6,
      views: 721,
      featured: false,
      status: ArticleStatus.PUBLISHED
    },
    {
      id: '6',
      title: '–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–π —á–∞—Å—Ç–∏ –ù–û–ö',
      excerpt: '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∏–∑—É—á–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–º—É —ç–∫–∑–∞–º–µ–Ω—É –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –æ—Ü–µ–Ω–∫–∏ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏.',
      content: '–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏...',
      slug: 'nok-theory-best-practices',
      publishedAt: new Date('2023-12-28'),
      updatedAt: new Date('2023-12-28'),
      author: this.mockAuthors[2],
      category: this.mockCategories[1],
      tags: [this.mockTags[3], this.mockTags[2]],
      featuredImage: 'üí°',
      readTime: 9,
      views: 1050,
      featured: false,
      status: ArticleStatus.PUBLISHED
    }
  ];

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å—Ç–∞—Ç—å–∏ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
   */
  getArticles(filters: Partial<BlogFilters> = {}, page = 1, limit = 6): Observable<{articles: BlogArticle[], pagination: PaginationData}> {
    let filteredArticles = [...this.mockArticles];

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    if (filters.search) {
      const searchLower = filters.search.toLowerCase();
      filteredArticles = filteredArticles.filter(article => 
        article.title.toLowerCase().includes(searchLower) ||
        article.excerpt.toLowerCase().includes(searchLower)
      );
    }

    if (filters.category) {
      filteredArticles = filteredArticles.filter(article => 
        article.category.slug === filters.category
      );
    }

    if (filters.tags && filters.tags.length > 0) {
      filteredArticles = filteredArticles.filter(article =>
        article.tags.some(tag => filters.tags!.includes(tag.slug))
      );
    }

    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
    switch (filters.sortBy) {
      case SortOption.OLDEST:
        filteredArticles.sort((a, b) => a.publishedAt.getTime() - b.publishedAt.getTime());
        break;
      case SortOption.MOST_VIEWED:
        filteredArticles.sort((a, b) => b.views - a.views);
        break;
      case SortOption.NEWEST:
      default:
        filteredArticles.sort((a, b) => b.publishedAt.getTime() - a.publishedAt.getTime());
        break;
    }

    // –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    const totalItems = filteredArticles.length;
    const totalPages = Math.ceil(totalItems / limit);
    const startIndex = (page - 1) * limit;
    const endIndex = startIndex + limit;
    const paginatedArticles = filteredArticles.slice(startIndex, endIndex);

    const pagination: PaginationData = {
      currentPage: page,
      totalPages,
      totalItems,
      itemsPerPage: limit,
      hasNext: page < totalPages,
      hasPrev: page > 1
    };

    return of({ articles: paginatedArticles, pagination }).pipe(delay(300));
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Å—Ç–∞—Ç—å–∏
   */
  getFeaturedArticles(limit = 2): Observable<BlogArticle[]> {
    const featured = this.mockArticles
      .filter(article => article.featured)
      .slice(0, limit);
    return of(featured).pipe(delay(200));
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
   */
  getCategories(): Observable<BlogCategory[]> {
    return of(this.mockCategories);
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–µ–≥–∏
   */
  getTags(): Observable<BlogTag[]> {
    return of(this.mockTags);
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—å—é –ø–æ slug
   */
  getArticleBySlug(slug: string): Observable<BlogArticle | null> {
    const article = this.mockArticles.find(a => a.slug === slug);
    return of(article || null).pipe(delay(200));
  }

  /**
   * –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π
   */
  searchArticles(query: string): Observable<BlogArticle[]> {
    if (!query.trim()) {
      return of([]);
    }
    
    const searchLower = query.toLowerCase();
    const results = this.mockArticles.filter(article => 
      article.title.toLowerCase().includes(searchLower) ||
      article.excerpt.toLowerCase().includes(searchLower) ||
      article.tags.some(tag => tag.name.toLowerCase().includes(searchLower))
    );
    
    return of(results).pipe(delay(300));
  }
} 