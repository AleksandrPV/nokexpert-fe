#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ —Å—á–µ—Ç—á–∏–∫–æ–≤
 * –ó–∞–ø—É—Å–∫: node scripts/test-analytics.js
 */

const fs = require('fs');
const path = require('path');

console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ —Å—á–µ—Ç—á–∏–∫–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ –ù–û–ö –≠–∫—Å–ø–µ—Ä—Ç\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
const checks = [
  {
    name: '–Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞',
    check: () => {
      const indexPath = path.join(__dirname, '../src/index.html');
      if (!fs.existsSync(indexPath)) return false;
      const content = fs.readFileSync(indexPath, 'utf-8');

      return {
        script: content.includes('mc.yandex.ru/metrika/tag.js?id=104076182'),
        init: content.includes('ym(104076182, \'init\''),
        ssr: content.includes('ssr:true'),
        webvisor: content.includes('webvisor:true'),
        clickmap: content.includes('clickmap:true'),
        noscript: content.includes('mc.yandex.ru/watch/104076182')
      };
    }
  },
  {
    name: '–Ø–Ω–¥–µ–∫—Å.–í–µ–±–º–∞—Å—Ç–µ—Ä –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è',
    check: () => {
      const indexPath = path.join(__dirname, '../src/index.html');
      if (!fs.existsSync(indexPath)) return false;
      const content = fs.readFileSync(indexPath, 'utf-8');

      return {
        metaTag: content.includes('yandex-verification'),
        content: content.includes('fc3cb51d6001bcbc'),
        placement: content.includes('<!-- Yandex Webmaster Verification -->')
      };
    }
  },
  {
    name: 'Google Analytics (–±—É–¥—É—â–∏–π)',
    check: () => {
      const indexPath = path.join(__dirname, '../src/index.html');
      if (!fs.existsSync(indexPath)) return false;
      const content = fs.readFileSync(indexPath, 'utf-8');

      return {
        gtag: content.includes('googletagmanager.com/gtag/js'),
        ga4: content.includes('GA_MEASUREMENT_ID'),
        gtagInit: content.includes('gtag(\'config\'')
      };
    }
  },
  {
    name: 'Service Worker –¥–ª—è –æ—Ñ—Ñ–ª–∞–π–Ω –∞–Ω–∞–ª–∏—Ç–∏–∫–∏',
    check: () => {
      const ngswPath = path.join(__dirname, '../ngsw-config.json');
      const appConfigPath = path.join(__dirname, '../src/app/app.config.ts');

      if (!fs.existsSync(ngswPath) || !fs.existsSync(appConfigPath)) return false;

      const ngswContent = fs.readFileSync(ngswPath, 'utf-8');
      const appConfigContent = fs.readFileSync(appConfigPath, 'utf-8');

      return {
        config: fs.existsSync(ngswPath),
        serviceWorker: appConfigContent.includes('ngsw-worker.js'),
        registration: appConfigContent.includes('registerWhenStable')
      };
    }
  }
];

// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫
let totalChecks = 0;
let passedChecks = 0;

checks.forEach(({ name, check }) => {
  try {
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ ${name}:`);
    const result = check();

    if (typeof result === 'object') {
      // –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å –æ–±—ä–µ–∫—Ç–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      Object.entries(result).forEach(([key, value]) => {
        const status = value ? '‚úÖ' : '‚ùå';
        console.log(`  ${status} ${key}`);
        totalChecks++;
        if (value) passedChecks++;
      });
    } else {
      // –ü—Ä–æ—Å—Ç–∞—è –±—É–ª–µ–≤–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞
      const status = result ? '‚úÖ' : '‚ùå';
      console.log(`  ${status} ${name}`);
      totalChecks++;
      if (result) passedChecks++;
    }
    console.log('');
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ ${name}: ${error.message}\n`);
  }
});

console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: ${passedChecks}/${totalChecks} –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ (–≤–∫–ª—é—á–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é)`);

if (passedChecks === totalChecks) {
  console.log('üéâ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤–Ω–µ–¥—Ä–µ–Ω—ã!');
} else {
  console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –µ—â–µ –Ω–µ –≤–Ω–µ–¥—Ä–µ–Ω—ã');
}

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ:');
console.log('1. ‚úÖ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∞ —Å –ø–æ–ª–Ω—ã–º –Ω–∞–±–æ—Ä–æ–º —Ñ—É–Ω–∫—Ü–∏–π');
console.log('2. üîÑ –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ Google Analytics 4');
console.log('3. üì± –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤');
console.log('4. üéØ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ü–µ–ª–∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –≤ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–µ');
console.log('5. üìä –°–æ–∑–¥–∞–π—Ç–µ –¥–∞—à–±–æ—Ä–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ KPI');

console.log('\nüîó –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏:');
console.log('- ID —Å—á–µ—Ç—á–∏–∫–∞: 104076182');
console.log('- SSR –ø–æ–¥–¥–µ—Ä–∂–∫–∞: –≤–∫–ª—é—á–µ–Ω–∞');
console.log('- –í–µ–±–≤–∏–∑–æ—Ä: –≤–∫–ª—é—á–µ–Ω');
console.log('- –ö–∞—Ä—Ç–∞ –∫–ª–∏–∫–æ–≤: –≤–∫–ª—é—á–µ–Ω–∞');
console.log('- –¢–æ—á–Ω—ã–π –æ—Ç–∫–∞–∑: –≤–∫–ª—é—á–µ–Ω');
console.log('- –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Å—ã–ª–æ–∫: –≤–∫–ª—é—á–µ–Ω–æ');

console.log('\nüìà –ú–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:');
console.log('- –ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞');
console.log('- –í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å (–≤—Ä–µ–º—è –Ω–∞ —Å–∞–π—Ç–µ, –ø—Ä–æ—Å–º–æ—Ç—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü)');
console.log('- –ö–æ–Ω–≤–µ—Ä—Å–∏–∏ (–∑–∞—è–≤–∫–∏, –∑–≤–æ–Ω–∫–∏, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏)');
console.log('- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏ (–æ—à–∏–±–∫–∏, —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏)');
console.log('- –ú–æ–±–∏–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ (—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –≥–µ–æ–≥—Ä–∞—Ñ–∏—è)');

console.log('\nüõ†Ô∏è –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–µ');
console.log('2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ü–µ–ª–∏ –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏');
console.log('3. –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –æ—Ç—á–µ—Ç—ã');
console.log('4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö');
console.log('5. –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ —Å CRM —Å–∏—Å—Ç–µ–º–æ–π');
