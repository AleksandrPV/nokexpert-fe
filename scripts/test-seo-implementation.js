#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è SEO –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞
 * –ó–∞–ø—É—Å–∫: node scripts/test-seo-implementation.js
 */

const fs = require('fs');
const path = require('path');

console.log('üîç –ü–†–û–í–ï–†–ö–ê –í–ù–ï–î–†–ï–ù–ò–Ø SEO –ù–ê –í–°–ï–• –°–¢–†–ê–ù–ò–¶–ê–• –ü–†–û–ï–ö–¢–ê –ù–û–ö –≠–ö–°–ü–ï–†–¢\n');

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
const pageComponents = [
  {
    name: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
    file: 'src/app/features/main/main-page.component.ts',
    expectedSeo: 'setHomePageSeo()',
    expectedStructuredData: ['addCustomerReviewsStructuredData', 'addLocalBusinessStructuredData']
  },
  {
    name: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ª—É–≥',
    file: 'src/app/features/services/components/services-page.component.ts',
    expectedSeo: 'setServicesPageSeo()',
    expectedStructuredData: ['addServicesPricingStructuredData']
  },
  {
    name: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ FAQ',
    file: 'src/app/features/faq/components/faq-page.component.ts',
    expectedSeo: 'setSeoData({',
    expectedStructuredData: ['addCompleteFaqStructuredData', 'addBreadcrumbsStructuredData']
  },
  {
    name: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤',
    file: 'src/app/features/contacts/components/contacts-page.component.ts',
    expectedSeo: 'setContactsPageSeo()',
    expectedStructuredData: ['addContactStructuredData', 'addServiceAvailabilityStructuredData']
  },
  {
    name: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –±–ª–æ–≥–∞',
    file: 'src/app/features/blog/components/blog-page.component.ts',
    expectedSeo: 'setBlogPageSeo()',
    expectedStructuredData: ['addBreadcrumbsStructuredData']
  },
  {
    name: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ "–ß—Ç–æ —Ç–∞–∫–æ–µ –ù–û–ö"',
    file: 'src/app/features/info/components/what-is-nok-page.component.ts',
    expectedSeo: 'setWhatIsNokPageSeo()',
    expectedStructuredData: ['addBreadcrumbsStructuredData']
  },
  {
    name: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ù–û–ö –ù–û–°–¢–†–û–ô',
    file: 'src/app/features/services/nok-nostroy/nok-nostroy-page.component.ts',
    expectedSeo: 'setNokNostroyPageSeo()',
    expectedStructuredData: ['addServicesPricingStructuredData']
  }
];

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
let totalPages = pageComponents.length;
let pagesWithSeo = 0;
let pagesWithStructuredData = 0;

console.log('üìã –ü–†–û–í–ï–†–ö–ê –°–¢–†–ê–ù–ò–¶:\n');

pageComponents.forEach((component, index) => {
  console.log(`${index + 1}. ${component.name}`);
  console.log(`   üìÑ –§–∞–π–ª: ${component.file}`);

  try {
    const filePath = path.join(__dirname, '..', component.file);
    const content = fs.readFileSync(filePath, 'utf-8');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ SEO –≤–Ω–µ–¥—Ä–µ–Ω–∏—è
    const hasSeo = content.includes(component.expectedSeo);
    console.log(`   ${hasSeo ? '‚úÖ' : '‚ùå'} SEO: ${component.expectedSeo}`);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ structured data
    let structuredDataCount = 0;
    component.expectedStructuredData.forEach(method => {
      const hasMethod = content.includes(method);
      console.log(`   ${hasMethod ? '‚úÖ' : '‚ùå'} Structured Data: ${method}`);
      if (hasMethod) structuredDataCount++;
    });

    if (hasSeo) pagesWithSeo++;
    if (structuredDataCount > 0) pagesWithStructuredData++;

    console.log('');

  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: ${error.message}`);
    console.log('');
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ SEO —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤
console.log('üîß –ü–†–û–í–ï–†–ö–ê SEO –°–ï–†–í–ò–°–ê:\n');

const seoServiceFile = 'src/app/shared/services/seo.service.ts';
const seoMethods = [
  'setHomePageSeo',
  'setServicesPageSeo',
  'setContactsPageSeo',
  'setBlogPageSeo',
  'setWhatIsNokPageSeo',
  'setNokNostroyPageSeo',
  'addCompleteFaqStructuredData',
  'addServicesPricingStructuredData',
  'addServiceAvailabilityStructuredData',
  'addContactStructuredData',
  'addCustomerReviewsStructuredData',
  'addLocalBusinessStructuredData',
  'addBreadcrumbsStructuredData'
];

try {
  const seoServicePath = path.join(__dirname, '..', seoServiceFile);
  const seoContent = fs.readFileSync(seoServicePath, 'utf-8');

  console.log('SEO –º–µ—Ç–æ–¥—ã:');
  let methodsFound = 0;

  seoMethods.forEach(method => {
    const hasMethod = seoContent.includes(method + '(');
    console.log(`   ${hasMethod ? '‚úÖ' : '‚ùå'} ${method}`);
    if (hasMethod) methodsFound++;
  });

  console.log(`\nüìä –ú–µ—Ç–æ–¥—ã SEO —Å–µ—Ä–≤–∏—Å–∞: ${methodsFound}/${seoMethods.length} –Ω–∞–π–¥–µ–Ω–æ`);

} catch (error) {
  console.log(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è SEO —Å–µ—Ä–≤–∏—Å–∞: ${error.message}`);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Schema.org
console.log('\nüéØ –ü–†–û–í–ï–†–ö–ê SCHEMA.ORG:\n');

const schemaTypes = [
  'FAQPage',
  'Service',
  'Organization',
  'LocalBusiness',
  'Offer',
  'ContactPoint',
  'BreadcrumbList'
];

try {
  const seoServicePath = path.join(__dirname, '..', seoServiceFile);
  const seoContent = fs.readFileSync(seoServicePath, 'utf-8');

  console.log('Schema.org —Ç–∏–ø—ã –≤ SEO —Å–µ—Ä–≤–∏—Å–µ:');
  let schemasFound = 0;

  schemaTypes.forEach(schema => {
    const hasSchema = seoContent.includes(`"@type": "${schema}"`);
    console.log(`   ${hasSchema ? '‚úÖ' : '‚ùå'} ${schema}`);
    if (hasSchema) schemasFound++;
  });

  console.log(`\nüìä Schema.org —Ç–∏–ø—ã: ${schemasFound}/${schemaTypes.length} –≤–Ω–µ–¥—Ä–µ–Ω–æ`);

} catch (error) {
  console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Schema.org: ${error.message}`);
}

// –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
console.log('\n' + '='.repeat(60));
console.log('üìä –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
console.log('='.repeat(60));

console.log(`üìÑ –°—Ç—Ä–∞–Ω–∏—Ü—ã —Å SEO: ${pagesWithSeo}/${totalPages}`);
console.log(`üîó –°—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ Structured Data: ${pagesWithStructuredData}/${totalPages}`);
console.log(`üîß SEO –º–µ—Ç–æ–¥—ã –≤ —Å–µ—Ä–≤–∏—Å–µ: ${seoMethods.length} –¥–æ—Å—Ç—É–ø–Ω–æ`);
console.log(`üéØ Schema.org —Ç–∏–ø—ã: ${schemaTypes.length} —Ç–∏–ø–æ–≤`);

const seoCoverage = Math.round((pagesWithSeo / totalPages) * 100);
const structuredDataCoverage = Math.round((pagesWithStructuredData / totalPages) * 100);

console.log(`\nüìà –ü–û–ö–†–´–¢–ò–ï SEO: ${seoCoverage}%`);
console.log(`üìà –ü–û–ö–†–´–¢–ò–ï STRUCTURED DATA: ${structuredDataCoverage}%`);

if (seoCoverage === 100 && structuredDataCoverage === 100) {
  console.log('\nüéâ –û–¢–õ–ò–ß–ù–û! SEO –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–Ω–µ–¥—Ä–µ–Ω –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö!');
  console.log('‚úÖ Schema.org –∞–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è');
  console.log('üöÄ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É!');
} else {
  console.log('\n‚ö†Ô∏è  SEO –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–Ω–æ–µ');
  console.log('‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç—Ä–µ–±—É—é—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏');
}

console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ Google Search Console');
console.log('2. –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ rich snippets –≤ Google Rich Results Test');
console.log('3. –í–∞–ª–∏–¥–∏—Ä—É–π—Ç–µ structured data –≤ Schema.org Validator');
console.log('4. –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ Core Web Vitals –≤ Google PageSpeed Insights');
console.log('5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Google Analytics –∏ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫—É');
