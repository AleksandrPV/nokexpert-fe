#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ SEO
 * –ó–∞–ø—É—Å–∫: node scripts/test-technical-seo.js
 */

const fs = require('fs');
const path = require('path');

console.log('üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ SEO –ø—Ä–æ–µ–∫—Ç–∞ –ù–û–ö –≠–∫—Å–ø–µ—Ä—Ç\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ SEO
const checks = [
  {
    name: 'XML Sitemap —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
    check: () => {
      const sitemapPath = path.join(__dirname, '../public/sitemap.xml');
      return fs.existsSync(sitemapPath);
    }
  },
  {
    name: 'Sitemap Index —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
    check: () => {
      const sitemapIndexPath = path.join(__dirname, '../public/sitemap-index.xml');
      return fs.existsSync(sitemapIndexPath);
    }
  },
  {
    name: 'OpenSearch —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
    check: () => {
      const opensearchPath = path.join(__dirname, '../public/opensearch.xml');
      return fs.existsSync(opensearchPath);
    }
  },
  {
    name: 'hreflang –≤ HTML',
    check: () => {
      const indexFile = path.join(__dirname, '../src/index.html');
      const content = fs.readFileSync(indexFile, 'utf-8');
      return content.includes('hreflang="ru"') && content.includes('hreflang="x-default"');
    }
  },
  {
    name: 'OpenSearch —Å—Å—ã–ª–∫–∞ –≤ HTML',
    check: () => {
      const indexFile = path.join(__dirname, '../src/index.html');
      const content = fs.readFileSync(indexFile, 'utf-8');
      return content.includes('rel="search"') && content.includes('opensearch.xml');
    }
  },
  {
    name: '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è structured data',
    check: () => {
      const seoService = path.join(__dirname, '../src/app/shared/services/seo.service.ts');
      const content = fs.readFileSync(seoService, 'utf-8');
      return content.includes('addContactStructuredData') &&
             content.includes('contactPoint') &&
             content.includes('aggregateRating');
    }
  },
  {
    name: 'Sitemap —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ URL',
    check: () => {
      const sitemapPath = path.join(__dirname, '../public/sitemap.xml');
      if (!fs.existsSync(sitemapPath)) return false;
      const content = fs.readFileSync(sitemapPath, 'utf-8');
      return content.includes('https://nok-expert.ru') &&
             !content.includes('–Ω–æ–∫-—ç–∫—Å–ø–µ—Ä—Ç.—Ä—Ñ');
    }
  },
  {
    name: 'Robots.txt —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é',
    check: () => {
      const robotsPath = path.join(__dirname, '../public/robots.txt');
      if (!fs.existsSync(robotsPath)) return false;
      const content = fs.readFileSync(robotsPath, 'utf-8');
      return content.includes('Allow: /') &&
             content.includes('nok-expert.ru/sitemap.xml');
    }
  }
];

// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫
let passed = 0;
let total = checks.length;

checks.forEach(({ name, check }) => {
  try {
    const result = check();
    const status = result ? '‚úÖ' : '‚ùå';
    console.log(`${status} ${name}`);
    if (result) passed++;
  } catch (error) {
    console.log(`‚ùå ${name} - –û—à–∏–±–∫–∞: ${error.message}`);
  }
});

console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${passed}/${total} –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ`);

if (passed === total) {
  console.log('üéâ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤–Ω–µ–¥—Ä–µ–Ω—ã!');
} else {
  console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –µ—â–µ –Ω–µ –≤–Ω–µ–¥—Ä–µ–Ω—ã');
}

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É SEO:');
console.log('1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ sitemap.xml –≤ Google Search Console');
console.log('2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ sitemap.xml –≤ –Ø–Ω–¥–µ–∫—Å.–í–µ–±–º–∞—Å—Ç–µ—Ä');
console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å hreflang —á–µ—Ä–µ–∑ Google Search Console');
console.log('4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Core Web Vitals');
console.log('5. –î–æ–±–∞–≤—å—Ç–µ Google Analytics –∏ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫—É');

console.log('\nüîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:');
console.log('- Google Search Console: https://search.google.com/search-console');
console.log('- –Ø–Ω–¥–µ–∫—Å.–í–µ–±–º–∞—Å—Ç–µ—Ä: https://webmaster.yandex.ru/');
console.log('- Google PageSpeed Insights: https://pagespeed.web.dev/');
console.log('- Schema.org Validator: https://validator.schema.org/');
