#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Google SEO —Å–µ—Ä–≤–∏—Å–æ–≤
 * –ó–∞–ø—É—Å–∫: node scripts/test-google-seo-integration.js
 */

const fs = require('fs');
const path = require('path');

console.log('üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò GOOGLE SEO –°–ï–†–í–ò–°–û–í\n');

// –§—É–Ω–∫—Ü–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function testFileExists(filePath, description) {
    const fullPath = path.join(__dirname, '..', filePath);
    const exists = fs.existsSync(fullPath);

    console.log(`${exists ? '‚úÖ' : '‚ùå'} ${description}`);
    if (!exists) {
        console.log(`   –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${fullPath}`);
    }

    return exists;
}

function testFileContent(filePath, searchPatterns, description) {
    const fullPath = path.join(__dirname, '..', filePath);

    try {
        const content = fs.readFileSync(fullPath, 'utf8');
        let allFound = true;

        console.log(`üîç ${description}`);

        searchPatterns.forEach(pattern => {
            const found = content.includes(pattern.search);
            console.log(`   ${found ? '‚úÖ' : '‚ùå'} ${pattern.description}`);

            if (!found && pattern.required) {
                console.log(`      –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω–æ "${pattern.search}"`);
                allFound = false;
            }
        });

        return allFound;
    } catch (error) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ ${filePath}: ${error.message}`);
        return false;
    }
}

// –¢–µ—Å—Ç—ã
console.log('üìã –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í:');
console.log('==================');

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
const filesExist = [
    testFileExists('src/index.html', '–û—Å–Ω–æ–≤–Ω–æ–π HTML —Ñ–∞–π–ª'),
    testFileExists('public/robots.txt', '–§–∞–π–ª robots.txt'),
    testFileExists('public/sitemap.xml', '–û—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ —Å–∞–π—Ç–∞'),
    testFileExists('src/app/shared/services/analytics.service.ts', '–°–µ—Ä–≤–∏—Å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏'),
    testFileExists('GOOGLE_SEO_SETUP.md', '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ')
];

console.log('\nüìã –ü–†–û–í–ï–†–ö–ê –ö–û–ù–¢–ï–ù–¢–ê:');
console.log('===================');

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ index.html
const indexHtmlTests = testFileContent('src/index.html', [
    { search: 'google-site-verification', description: 'Google Search Console –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è', required: true },
    { search: 'googletagmanager.com/gtag/js', description: 'Google Analytics 4 —Å–∫—Ä–∏–ø—Ç', required: true },
    { search: 'gtag(\'config\', \'GA_MEASUREMENT_ID\'', description: 'GA4 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è', required: true },
    { search: 'mc.yandex.ru', description: 'Yandex Metrika –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', required: true },
    { search: 'Content-Security-Policy', description: 'CSP –ø–æ–ª–∏—Ç–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', required: true },
    { search: 'googletagmanager.com', description: 'Google domains –≤ CSP', required: true }
], '–ü—Ä–æ–≤–µ—Ä–∫–∞ index.html');

// 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ robots.txt
const robotsTxtTests = testFileContent('public/robots.txt', [
    { search: 'User-agent: Googlebot', description: '–ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è Googlebot', required: true },
    { search: 'User-agent: YandexBot', description: '–ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è YandexBot', required: true },
    { search: 'Sitemap: https://nok-expert.ru/', description: '–ö–∞—Ä—Ç—ã —Å–∞–π—Ç–∞', required: true },
    { search: 'Host: https://nok-expert.ru', description: '–û—Å–Ω–æ–≤–Ω–æ–π —Ö–æ—Å—Ç', required: true },
    { search: '–ì–û–¢–û–í –ö –ò–ù–î–ï–ö–°–ê–¶–ò–ò', description: '–°—Ç–∞—Ç—É—Å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏', required: false }
], '–ü—Ä–æ–≤–µ—Ä–∫–∞ robots.txt');

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ sitemap.xml
const sitemapTests = testFileContent('public/sitemap.xml', [
    { search: 'https://nok-expert.ru/', description: '–û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', required: true },
    { search: 'https://nok-expert.ru/services', description: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ª—É–≥', required: true },
    { search: 'xmlns:image="http://www.google.com/schemas/sitemap-image/1.1"', description: 'Google image namespace', required: true },
    { search: 'changefreq', description: '–ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', required: true },
    { search: 'priority', description: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü', required: true }
], '–ü—Ä–æ–≤–µ—Ä–∫–∞ sitemap.xml');

// 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ analytics.service.ts
const analyticsTests = testFileContent('src/app/shared/services/analytics.service.ts', [
    { search: 'window.gtag', description: 'Google Analytics –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', required: true },
    { search: 'window.ym', description: 'Yandex Metrika –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', required: true },
    { search: 'GA_MEASUREMENT_ID', description: 'GA4 ID placeholder', required: true },
    { search: '104076182', description: 'Yandex Metrika ID', required: true }
], '–ü—Ä–æ–≤–µ—Ä–∫–∞ analytics.service.ts');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
console.log('\n‚öôÔ∏è  –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:');
console.log('========================');

// 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ placeholder'—ã
const placeholderTests = [
    testFileContent('src/index.html', [
        { search: 'PLACEHOLDER_FOR_GOOGLE_VERIFICATION_CODE', description: 'Google –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è placeholder', required: false }
    ], '–ü—Ä–æ–≤–µ—Ä–∫–∞ placeholder\'–æ–≤ –≤ index.html'),

    testFileContent('src/app/shared/services/analytics.service.ts', [
        { search: 'GA_MEASUREMENT_ID', description: 'GA4 ID placeholder', required: false }
    ], '–ü—Ä–æ–≤–µ—Ä–∫–∞ GA4 placeholder\'–æ–≤')
];

// –ò—Ç–æ–≥–∏
console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
console.log('===========================');

const allTestsPassed = [
    ...filesExist,
    indexHtmlTests,
    robotsTxtTests,
    sitemapTests,
    analyticsTests
].every(test => test);

if (allTestsPassed) {
    console.log('‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!');
    console.log('\nüéØ –î–ê–õ–ï–ï:');
    console.log('1. –ó–∞–º–µ–Ω–∏—Ç–µ GA_MEASUREMENT_ID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –∏–∑ Google Analytics');
    console.log('2. –ó–∞–º–µ–Ω–∏—Ç–µ PLACEHOLDER_FOR_GOOGLE_VERIFICATION_CODE –Ω–∞ –∫–æ–¥ –∏–∑ Search Console');
    console.log('3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ GOOGLE_SEO_SETUP.md');
    console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ Google Rich Results Test');
} else {
    console.log('‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò!');
    console.log('\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã');
    console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–æ–≤');
    console.log('3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ GOOGLE_SEO_SETUP.md');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ placeholder'—ã –¥–ª—è –∑–∞–º–µ–Ω—ã
const hasPlaceholders = [
    fs.readFileSync(path.join(__dirname, '..', 'src/index.html'), 'utf8').includes('PLACEHOLDER_FOR_GOOGLE_VERIFICATION_CODE'),
    fs.readFileSync(path.join(__dirname, '..', 'src/app/shared/services/analytics.service.ts'), 'utf8').includes('GA_MEASUREMENT_ID')
].some(has => has);

if (hasPlaceholders) {
    console.log('\n‚ö†Ô∏è  –í–ê–ñ–ù–û:');
    console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã placeholder\'—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è!');
    console.log('–°–º. GOOGLE_SEO_SETUP.md –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.');
}

console.log('\nüîó –ü–û–õ–ï–ó–ù–´–ï –°–°–´–õ–ö–ò:');
console.log('===================');
console.log('‚Ä¢ Google Search Console: https://search.google.com/search-console');
console.log('‚Ä¢ Google Analytics: https://analytics.google.com/');
console.log('‚Ä¢ Google Rich Results Test: https://search.google.com/test/rich-results');
console.log('‚Ä¢ Google PageSpeed Insights: https://pagespeed.web.dev/');
console.log('‚Ä¢ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ: GOOGLE_SEO_SETUP.md');
