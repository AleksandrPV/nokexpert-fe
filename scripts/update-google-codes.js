#!/usr/bin/env node

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–æ–≤ Google —Å–µ—Ä–≤–∏—Å–æ–≤
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/update-google-codes.js
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

function askQuestion(question) {
    return new Promise((resolve) => {
        rl.question(question, (answer) => {
            resolve(answer.trim());
        });
    });
}

async function updateGoogleCodes() {
    console.log('üîß –û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–û–î–û–í GOOGLE –°–ï–†–í–ò–°–û–í\n');

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üìã –í–∞–º –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –∫–æ–¥—ã –∏–∑ Google —Å–µ—Ä–≤–∏—Å–æ–≤:\n');

    const gscCode = await askQuestion('1. Google Search Console - –∫–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ (content –∏–∑ meta-—Ç–µ–≥–∞): ');
    const ga4Id = await askQuestion('2. Google Analytics 4 - Measurement ID (G-XXXXXXXXXX): ');

    if (!gscCode || !ga4Id) {
        console.log('‚ùå –í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!');
        rl.close();
        return;
    }

    console.log('\nüîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –§–ê–ô–õ–û–í...\n');

    try {
        // 1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Google Search Console –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        let indexHtml = fs.readFileSync(path.join(__dirname, '..', 'src/index.html'), 'utf8');
        indexHtml = indexHtml.replace('PLACEHOLDER_FOR_GOOGLE_VERIFICATION_CODE', gscCode);
        fs.writeFileSync(path.join(__dirname, '..', 'src/index.html'), indexHtml);
        console.log('‚úÖ Google Search Console –∫–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ index.html');

        // 2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Google Analytics ID –≤ index.html
        indexHtml = indexHtml.replace(/GA_MEASUREMENT_ID/g, ga4Id);
        fs.writeFileSync(path.join(__dirname, '..', 'src/index.html'), indexHtml);
        console.log('‚úÖ Google Analytics ID –æ–±–Ω–æ–≤–ª–µ–Ω –≤ index.html');

        // 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Google Analytics ID –≤ analytics.service.ts
        let analyticsService = fs.readFileSync(path.join(__dirname, '..', 'src/app/shared/services/analytics.service.ts'), 'utf8');
        analyticsService = analyticsService.replace('GA_MEASUREMENT_ID', ga4Id);
        fs.writeFileSync(path.join(__dirname, '..', 'src/app/shared/services/analytics.service.ts'), analyticsService);
        console.log('‚úÖ Google Analytics ID –æ–±–Ω–æ–≤–ª–µ–Ω –≤ analytics.service.ts');

        console.log('\nüéâ –í–°–ï –ö–û–î–´ –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù–´!\n');

        console.log('üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
        console.log('==================');
        console.log('1. ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ —Å–∞–π—Ç —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è: npm run build');
        console.log('2. ‚úÖ –†–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–∞–π—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
        console.log('3. ‚úÖ –í Google Search Console –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ HTML-—Ç–µ–≥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é');
        console.log('4. ‚úÖ –í Google Analytics –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (—á–µ—Ä–µ–∑ 24 —á–∞—Å–∞)');
        console.log('5. ‚úÖ –î–æ–±–∞–≤—å—Ç–µ sitemap –≤ Search Console');

        console.log('\nüîó –ü–û–õ–ï–ó–ù–´–ï –°–°–´–õ–ö–ò:');
        console.log('===================');
        console.log('‚Ä¢ Google Search Console: https://search.google.com/search-console');
        console.log('‚Ä¢ Google Analytics: https://analytics.google.com/');
        console.log('‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ rich results: https://search.google.com/test/rich-results');

    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤:', error.message);
    }

    rl.close();
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
updateGoogleCodes().catch(console.error);
