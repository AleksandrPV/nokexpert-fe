events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Логи
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Оптимизация
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/woff
        font/woff2
        application/font-woff
        application/font-woff2;


    # Основной сервер
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        
        # ACME Challenge для Let's Encrypt (должен быть первым!)
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }
        
        # Здоровье приложения - основные проверки
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Детальная проверка здоровья
        location = /health/detailed {
            access_log off;
            default_type application/json;

            return 200 '{
                "status": "healthy",
                "timestamp": "2025-01-01T00:00:00Z",
                "server": "nginx",
                "uptime": "0",
                "connections": {
                    "active": "0",
                    "reading": "0",
                    "writing": "0",
                    "waiting": "0"
                },
                "version": "1.0.0"
            }';
        }

        # Проверка SSR сервера
        location = /health/ssr {
            proxy_pass http://localhost:4000/health;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;

            # Fallback если SSR недоступен
            error_page 502 503 504 =200 "ssr-unavailable";
        }

        # Readiness probe для Kubernetes/Docker
        location = /ready {
            access_log off;
            try_files /health @readiness_check;
        }

        location @readiness_check {
            return 200 "ready\n";
            add_header Content-Type text/plain;
        }
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # HSTS для HTTPS (добавляется Traefik)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Кэширование статических файлов с оптимизацией
        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff";
            try_files $uri =404;
        }

        # Кэширование изображений
        location ~* \.(png|jpg|jpeg|gif|ico|svg|webp)$ {
            expires 6M;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff";
            try_files $uri =404;
        }

        # Кэширование шрифтов
        location ~* \.(woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
            add_header X-Content-Type-Options "nosniff";
            try_files $uri =404;
        }

        # Кэширование других статических файлов
        location ~* \.(json|xml|txt|pdf)$ {
            expires 1M;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }
        
        # SSR маршруты (для динамических страниц)
        location ~ ^/(faq|services)/.*$ {
            proxy_pass http://localhost:4000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Основные маршруты Angular (должен быть последним!)
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Блокируем доступ к скрытым файлам
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
} 